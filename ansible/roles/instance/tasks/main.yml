---
# Tasks to create a single AWS EC2 instance
- name: Provisioning EC2 instance
  block:
    - name: Upload public key to AWS
      ec2_key:
        name: "{{ key_name }}"
        key_material: "{{ lookup('file', '/home/emanmacario/.ssh/{{ key_name }}.pub') }}" # TODO: Use environment variable e.g. $ printenv
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"

    - name: Create security groups
      ec2_group:
        name: "{{ sec_group }}"
        description: "Security group for {{ id }} application"
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        # TODO: Make only accessible via my IP
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on ssh port
      register: result_sec_group

    - name: Create EC2 instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        key_name: "{{ key_name }}"
        id: "{{ id }}"
        group_id: "{{ result_sec_group.group_id }}"
        image: "{{ image }}"
        instance_type: "{{ instance_type }}"
        region: "{{ region }}"
        wait: true
        count: 1
  # For security, only execute instance provisioning if tag 'create_ec2' is specified
  tags: ['never', 'create_ec2']

- name: Gather facts
  block:
    - name: Get instance facts
      ec2_instance_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
      register: ec2

    - name: Instance IDs
      debug:
        msg: "ID: {{ item.instance_id }}; State: {{ item.state.name }}; Public DNS: {{ item.public_dns_name }};
              Public IP address: {{ item.public_ip_address }}"
      when: item.public_ip_address is defined
      loop: "{{ ec2.instances }}"
  tags: always

- name: Create EC2 host group
  block:
    - name: Wait for SSH
      wait_for:
        host: "{{ item.public_ip_address }}"
        port: 22
        timeout: 300
        state: started
      when: item.public_ip_address is defined
      loop: "{{ ec2.instances }}"

    - name: Create hosts group to dynamically provision against
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: ec2_instances
        ansible_ssh_private_key_file: ~/.ssh/my_aws
      when: item.public_ip_address is defined
      loop: "{{ ec2.instances }}"
  tags: always